Attribute VB_Name = "xlwings_udfs"
'Autogenerated code by xlwings - changes will be lost with next import!
#Const App = "Microsoft Excel" 'Adjust when using outside of Excel
Function AccuResource(thisDelta, prev)
Attribute AccuResource.VB_Description = "Python function 'AccuResource' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute AccuResource.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        AccuResource = Py.CallUDF("TC", "AccuResource", Array(thisDelta, prev), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        AccuResource = Py.CallUDF("TC", "AccuResource", Array(thisDelta, prev))
        Exit Function
    #End If
failed:
    AccuResource = err.Description
End Function

Function AccuResource2Table(AccuResource, title)
Attribute AccuResource2Table.VB_Description = "Python function 'AccuResource2Table' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute AccuResource2Table.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        AccuResource2Table = Py.CallUDF("TC", "AccuResource2Table", Array(AccuResource, title), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        AccuResource2Table = Py.CallUDF("TC", "AccuResource2Table", Array(AccuResource, title))
        Exit Function
    #End If
failed:
    AccuResource2Table = err.Description
End Function

Function CalcCurrResourceArr(taskArr, completeArr, idArr)
Attribute CalcCurrResourceArr.VB_Description = "Python function 'CalcCurrResourceArr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute CalcCurrResourceArr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        CalcCurrResourceArr = Py.CallUDF("TC", "CalcCurrResourceArr", Array(taskArr, completeArr, idArr), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        CalcCurrResourceArr = Py.CallUDF("TC", "CalcCurrResourceArr", Array(taskArr, completeArr, idArr))
        Exit Function
    #End If
failed:
    CalcCurrResourceArr = err.Description
End Function

Function CurrentResource(title, thisDelta)
Attribute CurrentResource.VB_Description = "Python function 'CurrentResource' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute CurrentResource.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        CurrentResource = Py.CallUDF("TC", "CurrentResource", Array(title, thisDelta), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        CurrentResource = Py.CallUDF("TC", "CurrentResource", Array(title, thisDelta))
        Exit Function
    #End If
failed:
    CurrentResource = err.Description
End Function

Function CurrentResourceArr(title, resourceCurrDeli)
Attribute CurrentResourceArr.VB_Description = "Python function 'CurrentResourceArr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute CurrentResourceArr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        CurrentResourceArr = Py.CallUDF("TC", "CurrentResourceArr", Array(title, resourceCurrDeli), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        CurrentResourceArr = Py.CallUDF("TC", "CurrentResourceArr", Array(title, resourceCurrDeli))
        Exit Function
    #End If
failed:
    CurrentResourceArr = err.Description
End Function

Function Json2ArrPY(rng1)
Attribute Json2ArrPY.VB_Description = "Python function 'Json2ArrPY' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute Json2ArrPY.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        Json2ArrPY = Py.CallUDF("TC", "Json2ArrPY", Array(rng1), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        Json2ArrPY = Py.CallUDF("TC", "Json2ArrPY", Array(rng1))
        Exit Function
    #End If
failed:
    Json2ArrPY = err.Description
End Function

Function Range2Json(rng1)
Attribute Range2Json.VB_Description = "Python function 'Range2Json' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute Range2Json.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        Range2Json = Py.CallUDF("TC", "Range2Json", Array(rng1), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        Range2Json = Py.CallUDF("TC", "Range2Json", Array(rng1))
        Exit Function
    #End If
failed:
    Range2Json = err.Description
End Function

Function ResourceNeeded(thisDelta, thisAccu)
Attribute ResourceNeeded.VB_Description = "Python function 'ResourceNeeded' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute ResourceNeeded.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        ResourceNeeded = Py.CallUDF("TC", "ResourceNeeded", Array(thisDelta, thisAccu), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        ResourceNeeded = Py.CallUDF("TC", "ResourceNeeded", Array(thisDelta, thisAccu))
        Exit Function
    #End If
failed:
    ResourceNeeded = err.Description
End Function

Function Table2Json(name, dataRange, titleRange)
Attribute Table2Json.VB_Description = "Python function 'Table2Json' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute Table2Json.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        Table2Json = Py.CallUDF("TC", "Table2Json", Array(name, dataRange, titleRange), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        Table2Json = Py.CallUDF("TC", "Table2Json", Array(name, dataRange, titleRange))
        Exit Function
    #End If
failed:
    Table2Json = err.Description
End Function

Function TimePercentArr(taskArr, startArr, endArr, StartTime, EndTime)
Attribute TimePercentArr.VB_Description = "Python function 'TimePercentArr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute TimePercentArr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        TimePercentArr = Py.CallUDF("TC", "TimePercentArr", Array(taskArr, startArr, endArr, StartTime, EndTime), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        TimePercentArr = Py.CallUDF("TC", "TimePercentArr", Array(taskArr, startArr, endArr, StartTime, EndTime))
        Exit Function
    #End If
failed:
    TimePercentArr = err.Description
End Function

Function TimePlannedPercent(plannedStartArr, plannedEndArr, StartTime, EndTime)
Attribute TimePlannedPercent.VB_Description = "Python function 'TimePlannedPercent' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute TimePlannedPercent.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        TimePlannedPercent = Py.CallUDF("TC", "TimePlannedPercent", Array(plannedStartArr, plannedEndArr, StartTime, EndTime), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        TimePlannedPercent = Py.CallUDF("TC", "TimePlannedPercent", Array(plannedStartArr, plannedEndArr, StartTime, EndTime))
        Exit Function
    #End If
failed:
    TimePlannedPercent = err.Description
End Function

Function TimePlannedPercentArr(plannedStartArr, plannedEndArr, StartTime)
Attribute TimePlannedPercentArr.VB_Description = "Python function 'TimePlannedPercentArr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute TimePlannedPercentArr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        TimePlannedPercentArr = Py.CallUDF("TC", "TimePlannedPercentArr", Array(plannedStartArr, plannedEndArr, StartTime), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        TimePlannedPercentArr = Py.CallUDF("TC", "TimePlannedPercentArr", Array(plannedStartArr, plannedEndArr, StartTime))
        Exit Function
    #End If
failed:
    TimePlannedPercentArr = err.Description
End Function

Function Timeline2Json(name, dataRange, titleRange, Optional TitleOverride)
Attribute Timeline2Json.VB_Description = "Python function 'Timeline2Json' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute Timeline2Json.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        Timeline2Json = Py.CallUDF("TC", "Timeline2Json", Array(name, dataRange, titleRange, TitleOverride), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        Timeline2Json = Py.CallUDF("TC", "Timeline2Json", Array(name, dataRange, titleRange, TitleOverride))
        Exit Function
    #End If
failed:
    Timeline2Json = err.Description
End Function

Function Timeline2JsonSelected(name, idRange, dataRange, titleRange, Optional TitleOverride)
Attribute Timeline2JsonSelected.VB_Description = "Python function 'Timeline2JsonSelected' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute Timeline2JsonSelected.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        Timeline2JsonSelected = Py.CallUDF("TC", "Timeline2JsonSelected", Array(name, idRange, dataRange, titleRange, TitleOverride), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        Timeline2JsonSelected = Py.CallUDF("TC", "Timeline2JsonSelected", Array(name, idRange, dataRange, titleRange, TitleOverride))
        Exit Function
    #End If
failed:
    Timeline2JsonSelected = err.Description
End Function

Function add_one(data)
Attribute add_one.VB_Description = "Python function 'add_one' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute add_one.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        add_one = Py.CallUDF("TC", "add_one", Array(data), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        add_one = Py.CallUDF("TC", "add_one", Array(data))
        Exit Function
    #End If
failed:
    add_one = err.Description
End Function

Function genSUMINEstimate(fromarr, toarr, coeff, realsumin, tasks)
Attribute genSUMINEstimate.VB_Description = "Python function 'genSUMINEstimate' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute genSUMINEstimate.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        genSUMINEstimate = Py.CallUDF("TC", "genSUMINEstimate", Array(fromarr, toarr, coeff, realsumin, tasks), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        genSUMINEstimate = Py.CallUDF("TC", "genSUMINEstimate", Array(fromarr, toarr, coeff, realsumin, tasks))
        Exit Function
    #End If
failed:
    genSUMINEstimate = err.Description
End Function

Function genTaskSequeceForResource(resource)
Attribute genTaskSequeceForResource.VB_Description = "Python function 'genTaskSequeceForResource' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute genTaskSequeceForResource.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        genTaskSequeceForResource = Py.CallUDF("TC", "genTaskSequeceForResource", Array(resource), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        genTaskSequeceForResource = Py.CallUDF("TC", "genTaskSequeceForResource", Array(resource))
        Exit Function
    #End If
failed:
    genTaskSequeceForResource = err.Description
End Function

Function genTaskSequenceForTask(task)
Attribute genTaskSequenceForTask.VB_Description = "Python function 'genTaskSequenceForTask' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute genTaskSequenceForTask.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        genTaskSequenceForTask = Py.CallUDF("TC", "genTaskSequenceForTask", Array(task), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        genTaskSequenceForTask = Py.CallUDF("TC", "genTaskSequenceForTask", Array(task))
        Exit Function
    #End If
failed:
    genTaskSequenceForTask = err.Description
End Function

Function genTransportMap(location)
Attribute genTransportMap.VB_Description = "Python function 'genTransportMap' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute genTransportMap.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        genTransportMap = Py.CallUDF("TC", "genTransportMap", Array(location), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        genTransportMap = Py.CallUDF("TC", "genTransportMap", Array(location))
        Exit Function
    #End If
failed:
    genTransportMap = err.Description
End Function

Function genValueExchangeMap(task, header, data, alltask, allestimatedTime, alllocation)
Attribute genValueExchangeMap.VB_Description = "Python function 'genValueExchangeMap' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute genValueExchangeMap.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        genValueExchangeMap = Py.CallUDF("TC", "genValueExchangeMap", Array(task, header, data, alltask, allestimatedTime, alllocation), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        genValueExchangeMap = Py.CallUDF("TC", "genValueExchangeMap", Array(task, header, data, alltask, allestimatedTime, alllocation))
        Exit Function
    #End If
failed:
    genValueExchangeMap = err.Description
End Function

Function generateCalendar(startIndex, titleRange, dataRange)
Attribute generateCalendar.VB_Description = "Python function 'generateCalendar' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute generateCalendar.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        generateCalendar = Py.CallUDF("TC", "generateCalendar", Array(startIndex, titleRange, dataRange), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        generateCalendar = Py.CallUDF("TC", "generateCalendar", Array(startIndex, titleRange, dataRange))
        Exit Function
    #End If
failed:
    generateCalendar = err.Description
End Function

Function getParent(task, map, Optional filter)
Attribute getParent.VB_Description = "Python function 'getParent' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute getParent.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        getParent = Py.CallUDF("TC", "getParent", Array(task, map, filter), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        getParent = Py.CallUDF("TC", "getParent", Array(task, map, filter))
        Exit Function
    #End If
failed:
    getParent = err.Description
End Function

Function getTimelineDataFile(name, id, title)
Attribute getTimelineDataFile.VB_Description = "Python function 'getTimelineDataFile' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute getTimelineDataFile.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        getTimelineDataFile = Py.CallUDF("TC", "getTimelineDataFile", Array(name, id, title), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        getTimelineDataFile = Py.CallUDF("TC", "getTimelineDataFile", Array(name, id, title))
        Exit Function
    #End If
failed:
    getTimelineDataFile = err.Description
End Function

Function getTransport(addressFrom, addressTo)
Attribute getTransport.VB_Description = "Python function 'getTransport' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute getTransport.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        getTransport = Py.CallUDF("TC", "getTransport", Array(addressFrom, addressTo), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        getTransport = Py.CallUDF("TC", "getTransport", Array(addressFrom, addressTo))
        Exit Function
    #End If
failed:
    getTransport = err.Description
End Function

Function matrix_mult(x, y)
Attribute matrix_mult.VB_Description = "Python function 'matrix_mult' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute matrix_mult.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        matrix_mult = Py.CallUDF("TC", "matrix_mult", Array(x, y), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        matrix_mult = Py.CallUDF("TC", "matrix_mult", Array(x, y))
        Exit Function
    #End If
failed:
    matrix_mult = err.Description
End Function

Function planAvalible(numArr, titleArr, startArr, endArr, movable, locationArr, currresourceJSON, accuresourceJSON, mode)
Attribute planAvalible.VB_Description = "Python function 'planAvalible' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute planAvalible.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        planAvalible = Py.CallUDF("TC", "planAvalible", Array(numArr, titleArr, startArr, endArr, movable, locationArr, currresourceJSON, accuresourceJSON, mode), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        planAvalible = Py.CallUDF("TC", "planAvalible", Array(numArr, titleArr, startArr, endArr, movable, locationArr, currresourceJSON, accuresourceJSON, mode))
        Exit Function
    #End If
failed:
    planAvalible = err.Description
End Function

Function resourceArrayAccu(thisDelta, prev)
Attribute resourceArrayAccu.VB_Description = "Python function 'resourceArrayAccu' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute resourceArrayAccu.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        resourceArrayAccu = Py.CallUDF("TC", "resourceArrayAccu", Array(thisDelta, prev), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        resourceArrayAccu = Py.CallUDF("TC", "resourceArrayAccu", Array(thisDelta, prev))
        Exit Function
    #End If
failed:
    resourceArrayAccu = err.Description
End Function

Function returnoriginal(x)
Attribute returnoriginal.VB_Description = "Python function 'returnoriginal' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute returnoriginal.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        returnoriginal = Py.CallUDF("TC", "returnoriginal", Array(x), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        returnoriginal = Py.CallUDF("TC", "returnoriginal", Array(x))
        Exit Function
    #End If
failed:
    returnoriginal = err.Description
End Function

Function supplyArr(taskArr, thisDelta, id, resourceNamesArr)
Attribute supplyArr.VB_Description = "Python function 'supplyArr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute supplyArr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        supplyArr = Py.CallUDF("TC", "supplyArr", Array(taskArr, thisDelta, id, resourceNamesArr), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        supplyArr = Py.CallUDF("TC", "supplyArr", Array(taskArr, thisDelta, id, resourceNamesArr))
        Exit Function
    #End If
failed:
    supplyArr = err.Description
End Function

Function testingarr(thisDelta)
Attribute testingarr.VB_Description = "Python function 'testingarr' defined in 'C:\\_DATA\\_Storage\\_Sync\\Devices\\root\\Documents\\root\\Data\\TC.py'."
Attribute testingarr.VB_ProcData.VB_Invoke_Func = " \n20"
    If (Not Application.CommandBars("Standard").Controls(1).Enabled) Then Exit Function
    #If App = "Microsoft Excel" Then
        If TypeOf Application.Caller Is range Then On Error GoTo failed
        testingarr = Py.CallUDF("TC", "testingarr", Array(thisDelta), ThisWorkbook, Application.Caller)
        Exit Function
    #Else
        testingarr = Py.CallUDF("TC", "testingarr", Array(thisDelta))
        Exit Function
    #End If
failed:
    testingarr = err.Description
End Function

